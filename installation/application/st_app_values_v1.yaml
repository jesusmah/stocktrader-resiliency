secret:
  db:
    create: true
    secret_name: stocktrader-db2
    # db: STOCKTRD
    db: U1RPQ0tUUkQ=
    # host: st-db2-ibm-db2oltp-dev-db2
    host: c3QtZGIyLWlibS1kYjJvbHRwLWRldi1kYjI=
    # id: db2inst1
    id: ZGIyaW5zdDE=
    # port: 50000
    port: NTAwMDA=
    # pwd: stocktraderdb
    pwd: c3RvY2t0cmFkZXJkYg==

  jwt:
    create: true
    secret_name: stocktrader-jwt
    # audience: stock-trader
    audience: c3RvY2stdHJhZGVy
    # issuer: http://stock-trader.ibm.com
    issuer: aHR0cDovL3N0b2NrLXRyYWRlci5pYm0uY29t

  mq:
    create: true
    secret_name: stocktrader-mq
    # id: app
    id: YXBw
    pwd:
    # host: st-mq-ibm-mq
    host: c3QtbXEtaWJtLW1x
    # port: 1414
    port: MTQxNA==
    # channel: DEV.APP.SVRCONN
    channel: REVWLkFQUC5TVlJDT05O
    # queue-manager: trader
    queue_manager: dHJhZGVy
    # queue: NotificationQ
    queue: Tm90aWZpY2F0aW9uUQ==

  openwhisk:
    create: true
    secret_name: stocktrader-openwhisk
    # url: https://openwhisk.ng.bluemix.net/api/v1/namespaces/jalcorn%40us.ibm.com_dev/actions/PostLoyaltyLevelToSlack
    url: aHR0cHM6Ly9vcGVud2hpc2submcuYmx1ZW1peC5uZXQvYXBpL3YxL25hbWVzcGFjZXMvamFsY29ybiU0MHVzLmlibS5jb21fZGV2L2FjdGlvbnMvUG9zdExveWFsdHlMZXZlbFRvU2xhY2s=
    # id: bc2b0a37-0554-4658-9ebe-ae068eb1aa22
    id: YmMyYjBhMzctMDU1NC00NjU4LTllYmUtYWUwNjhlYjFhYTIy
    # pwd: 45t2FZC1q1bv6OYUztZUjkYFaVNs5klaviHoE6gFvgEedu9akiE1YW6lChOxUgJb
    pwd: NDV0MkZaQzFxMWJ2Nk9ZVXp0WlVqa1lGYVZOczVrbGF2aUhvRTZnRnZnRWVkdTlha2lFMVlXNmxDaE94VWdKYg==

  redis:
    create: true
    secret_name: stocktrader-redis
    # redis://x:redispasswd@st-redis-master:6379
    url: cmVkaXM6Ly94OnJlZGlzcGFzc3dkQHN0LXJlZGlzLW1hc3Rlcjo2Mzc5
    # quandl_key: NERAEyRSX86k54t5-R-s
    quandl_key: TkVSQUV5UlNYODZrNTR0NS1SLXM=

  twitter:
    create: true
    secret_name: stocktrader-twitter
    # consumerKey: TFwa8ifAmxFmns02QEAm3qt2v
    consumerKey: VEZ3YThpZkFteEZtbnMwMlFFQW0zcXQydg==
    # consumerSecret: 7B07ZCGUcM52bdpEuhkZG3EoP85iY69Ie9zUQwVG7Ll6Pvo0Hv
    consumerSecret: N0IwN1pDR1VjTTUyYmRwRXVoa1pHM0VvUDg1aVk2OUllOXpVUXdWRzdMbDZQdm8wSHY=
    # accessToken: 919153883989073920-vjMloUBKs8UG8O1O1zLQozFtyTQq9tL
    accessToken: OTE5MTUzODgzOTg5MDczOTIwLXZqTWxvVUJLczhVRzhPMU8xekxRb3pGdHlUUXE5dEw=
    # accessTokenSecret: d6UE1vjs1NKMJMaQ7ofWRElJxWh9ePJQjgOOdZmSf28XQ
    accessTokenSecret: ZDZVRTF2anMxTktNSk1hUTdvZldSRWxKeFdoOWVQSlFqZ09PZFptU2YyOFhR

############################################################################################################################

loyalty-level:
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: ibmstocktrader
    name: loyalty-level
    tag: latest
    pullPolicy: IfNotPresent
    containerPort:
      http: 9080
      https: 9443
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
  service:
    # Change this to ClusterIP before releasing charts so microservices can only be reached through the ingress
    type: ClusterIP
    servicePort:
      http: 9080
      https: 9443

############################################################################################################################

messaging:
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: ibmstocktrader
    name: messaging
    tag: latest
    pullPolicy: IfNotPresent
    containerPort:
      http: 9080
      https: 9443
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
  notification:
    notification_service_slack: notification-slack
    notification_service_port_slack: "9080"
    notification_service_context_slack: notification
    notification_service_twitter: notification-twitter
    notification_service_port_twitter: "9080"
    notification_service_context_twitter: notification

############################################################################################################################

notification-twitter:
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: ibmstocktrader
    name: notification-twitter
    tag: latest
    pullPolicy: IfNotPresent
    containerPort:
      http: 9080
      https: 9443
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
  service:
    # Change this to ClusterIP before releasing charts so microservices can only be reached through the ingress
    type: ClusterIP
    servicePort:
      http: 9080
      https: 9443

############################################################################################################################

portfolio:
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: ibmstocktrader
    name: portfolio
    tag: classic
    pullPolicy: IfNotPresent
    containerPort:
      http: 9080
      https: 9443
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
  service:
    # Change this to ClusterIP before releasing charts so microservices can only be reached through the ingress
    type: ClusterIP
    servicePort:
      http: 9080
      https: 9443
  stock:
    stock_service: stock-quote
    stock_service_port: "9080"
    stock_service_context: stock-quote

############################################################################################################################

stock-quote:
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: ibmstocktrader
    name: stock-quote
    tag: latest
    pullPolicy: IfNotPresent
    containerPort:
      http: 9080
      https: 9443
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
  service:
    # Change this to ClusterIP before releasing charts so microservices can only be reached through the ingress
    type: ClusterIP
    servicePort:
      http: 9080
      https: 9443

############################################################################################################################

trader:
  replicaCount: 1
  revisionHistoryLimit: 1
  image:
    repository: ibmstocktrader
    name: trader
    tag: classic
    pullPolicy: IfNotPresent
    containerPort:
      http: 9080
      https: 9443
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
  service:
    # Change this to ClusterIP before releasing charts so microservices can only be reached through the ingress
    type: NodePort
    servicePort:
      http: 9080
      https: 9443
  portfolio:
    portfolio_service: portfolio
    portfolio_service_port: "9080"
    portfolio_service_context: "portfolio"
